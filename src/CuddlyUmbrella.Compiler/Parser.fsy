%{

open CuddlyUmbrella.Compiler

%}



%token IDENTIFIER

// Keywords
%token DEF RETURN VAR IF THEN ELSE

%token <string>IDENT
%token <string>TYPE_SPEC

%token <System.Boolean>BOOL
%token <System.Int32>INT
%token <System.Single>FLOAT

// Punctuation
%token LPAREN RPAREN LBRACE RBRACE COLON SEMICOLON COMMA DBLQUOTE

// Operators
%token PLUS MINUS EQ LT GT LEQ GEQ

// Assignment arror
%token LARROW

// Misc tokens
%token EOF

%start start
%type < CuddlyUmbrella.Compiler.Ast.Program > start
%type < CuddlyUmbrella.Compiler.Ast.FunctionDefinition list > fun_decl_list

%%

start: program EOF { $1 }

program:				  fun_decl_list stmt_list				{ ($1, $2) }
fun_decl_list:			  /* empty */							{ List.empty<Ast.FunctionDefinition> }
                        | fun_decl_list fun_decl				{ $1 @ [$2] }
                        | fun_decl								{ [$1] }
fun_decl:				IDENT									{ Ast.FunctionDefinition $1}
stmt_list:				/* empty */							{ List.empty<Ast.Statement> }
    